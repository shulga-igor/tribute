/*! HTML5 Boilerplate v8.0.0 | MIT License | https://html5boilerplate.com/ */

/* main.css 2.1.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

   html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
  }



  /*
   * Remove text-shadow in selection highlight:
   * https://twitter.com/miketaylr/status/12228805301
   *
   * Vendor-prefixed and regular ::selection selectors cannot be combined:
   * https://stackoverflow.com/a/16982510/7133471
   *
   * Customize the background color to match your design.
   */

  ::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
  }

  ::selection {
    background: #b3d4fc;
    text-shadow: none;
  }

  /*
   * A better looking default horizontal rule
   */

  hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
  }

  /*
   * Remove the gap between audio, canvas, iframes,
   * images, videos and the bottom of their containers:
   * https://github.com/h5bp/html5-boilerplate/issues/440
   */

  audio,
  canvas,
  iframe,
  img,
  svg,
  video {
    vertical-align: middle;
  }

  /*
   * Remove default fieldset styles.
   */

  fieldset {
    border: 0;
    margin: 0;
    padding: 0;
  }

  /*
   * Allow only vertical resizing of textareas.
   */

  textarea {
    resize: vertical;
  }

  /* ==========================================================================
     Author's custom styles
     ========================================================================== */

  /* ==========================================================================
     Helper classes
     ========================================================================== */

  /*
   * Hide visually and from screen readers
   */

  .hidden,
  [hidden] {
    display: none !important;
  }

  /*
   * Hide only visually, but have it available for screen readers:
   * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
   *
   * 1. For long content, line feeds are not interpreted as spaces and small width
   *    causes content to wrap 1 word per line:
   *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
   */

  .sr-only {
    border: 0;
    clip: rect(0, 0, 0, 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    white-space: nowrap;
    width: 1px;
    /* 1 */
  }

  /*
   * Extends the .sr-only class to allow the element
   * to be focusable when navigated to via the keyboard:
   * https://www.drupal.org/node/897638
   */

  .sr-only.focusable:active,
  .sr-only.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    white-space: inherit;
    width: auto;
  }

  /*
   * Hide visually and from screen readers, but maintain layout
   */

  .invisible {
    visibility: hidden;
  }

  /*
   * Clearfix: contain floats
   *
   * For modern browsers
   * 1. The space content is one way to avoid an Opera bug when the
   *    `contenteditable` attribute is included anywhere else in the document.
   *    Otherwise it causes space to appear at the top and bottom of elements
   *    that receive the `clearfix` class.
   * 2. The use of `table` rather than `block` is only necessary if using
   *    `:before` to contain the top-margins of child elements.
   */

  .clearfix::before,
  .clearfix::after {
    content: " ";
    display: table;
  }

  .clearfix::after {
    clear: both;
  }

  /* ==========================================================================
     EXAMPLE Media Queries for Responsive Design.
     These examples override the primary ('mobile first') styles.
     Modify as content requires.
     ========================================================================== */

  @media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
  }

  @media print,
    (-webkit-min-device-pixel-ratio: 1.25),
    (min-resolution: 1.25dppx),
    (min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
  }

  /* ==========================================================================
     Print styles.
     Inlined to avoid the additional HTTP request:
     https://www.phpied.com/delay-loading-your-print-css/
     ========================================================================== */

  @media print {
    *,
    *::before,
    *::after {
      background: #fff !important;
      color: #000 !important;
      /* Black prints faster */
      box-shadow: none !important;
      text-shadow: none !important;
    }

    a,
    a:visited {
      text-decoration: underline;
    }

    a[href]::after {
      content: " (" attr(href) ")";
    }

    abbr[title]::after {
      content: " (" attr(title) ")";
    }

    /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */
    a[href^="#"]::after,
    a[href^="javascript:"]::after {
      content: "";
    }



    pre {
      white-space: pre-wrap !important;
    }

    pre,
    blockquote {
      border: 1px solid #999;
      page-break-inside: avoid;
    }

    /*
     * Printing Tables:
     * https://web.archive.org/web/20180815150934/http://css-discuss.incutio.com/wiki/Printing_Tables
     */
    thead {
      display: table-header-group;
    }

    tr,
    img {
      page-break-inside: avoid;
    }

    p,
    h2,
    h3 {
      orphans: 3;
      widows: 3;
    }

    h2,
    h3 {
      page-break-after: avoid;
    }
  }

  @mixin inner {
    width: 100%;
    max-width: $width + 40px;
    padding: 0 20px;
    margin: 0 auto;
  }
*{
  box-sizing: border-box;
}




html, body{
  min-height: 100vh;
  overflow-x: hidden;
}
body{
  min-height: 100vh;
  font-family: $montserrat;
  font-size: 16px;
  line-height: 1.4;
  color: $text-color;
  width: 100%;
  font-weight: 400;
  overflow-x: hidden;
}
.wrapper{
  position: relative;
  @media screen and (min-width: 991px){
    min-height: 100vh;
  }
}

.container{
  @include inner;
}


.button{
  display: inline-block;
  background: $primary-color;
  color: #fff;
  padding: 15px 35px;
  text-decoration: none;
  border-radius: 3px;
  border: none;
  transition: all linear .2s;
  font-weight: 600;
  font-size: 24px;
  cursor: pointer;
  text-align: center;
  @media screen and (max-width: 1199px) {
    padding: 15px 20px;
  }
  &:hover{
      transition: all linear .2s;
      background: $primary-color-dark;
  }

  &.green{
    background: #44b223;
    &:hover{
      background: #2fcb00;
  }
  }
}

.link{
  font-size: 16px;
  font-weight: 400;
  text-decoration: none;
  color: $text-color;
  transition: all linear .2s;
  position: relative;
  &:after{
      content: '';
      position: absolute;
      left: 0;
      bottom: -5px;
      width: 100%;
      height: 2px;
      background: $primary-color;
      transform: scale(0);
      transition: all linear .2s;
  }
  &:hover{
      transition: all linear .2s;
      color: $primary-color-dark;
      &:after{
          transition: all linear .2s;
          transform: scale(1);
      }
  }
}

input{
  width: 100%;
  height: 45px;
  padding: 10px 16px;
  font-size: 18px;
  border: none;
  border-radius: 5px;
  border: 1px solid #d9dce1;
  &:focus{
      outline: none;
  }
  &::placeholder {
      color: #6a737d;
      opacity: 1;
  }
  
  &:-ms-input-placeholder {
      color: #6a737d;
  }
  
  &::-ms-input-placeholder { 
      color: #6a737d;
  }
}

h1, h2, h3, h4, h5, h6{
  font-family: $nunito;
}